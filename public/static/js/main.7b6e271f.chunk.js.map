{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","logo.png","components/Note.js","App.js","serviceWorker.js","index.js"],"names":["LaunchItem","launch","flight_number","mission_name","launch_date_local","launch_success","className","classNames","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","useState","launchItems","setLaunchItems","launchItemsOrder","setLaunchItemsOrder","console","log","length","launches","onClick","reverse","prevLaunchItemsOrder","map","LAUNCH_QUERY","Launch","Component","render","this","props","match","params","parseInt","query","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","Note","showModal","setShowModal","show","style","left","window","innerWidth","width","role","href","target","rel","type","data-dismiss","aria-label","aria-hidden","client","ApolloClient","uri","App","src","logo","alt","display","margin","exact","path","component","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b6e271f.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport Moment from 'react-moment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LaunchItem({\r\n  launch: { flight_number, mission_name, launch_date_local, launch_success }\r\n}) {\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <h4>\r\n            Mission:{' '}\r\n            <span\r\n              className={classNames({\r\n                'text-success': launch_success,\r\n                'text-danger': !launch_success\r\n              })}\r\n            >\r\n              {mission_name}\r\n            </span>\r\n          </h4>\r\n          <p>\r\n            Date: <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\r\n          </p>\r\n        </div>\r\n        <div className=\"col-md-3\">\r\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\r\n            Launch Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function MissionKey() {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-success\" /> = Success\r\n      </p>\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, Fragment, useEffect, useState } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query, useQuery } from 'react-apollo';\r\nimport LaunchItem from './LaunchItem';\r\nimport MissionKey from './MissionKey';\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n\tquery LaunchesQuery {\r\n\t\tlaunches {\r\n\t\t\tflight_number\r\n\t\t\tmission_name\r\n\t\t\tlaunch_date_local\r\n\t\t\tlaunch_success\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nfunction Launches() {\r\n\tconst { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n\tconst [launchItems, setLaunchItems] = useState([]);\r\n\tconst [launchItemsOrder, setLaunchItemsOrder] = useState('desc');\r\n\r\n\tif (loading) return <h1 className=\"display-4 my-3\">Loading...</h1>;\r\n\tif (error) console.log(error);\r\n\r\n\tif (data && launchItems.length === 0) {\r\n\t\tsetLaunchItems(data.launches);\r\n\t}\r\n\r\n\tfunction updateItemsOrder() {\r\n\t\tsetLaunchItems(launchItems.reverse());\r\n\t\tsetLaunchItemsOrder(prevLaunchItemsOrder =>\r\n\t\t\tprevLaunchItemsOrder === 'asc' ? 'desc' : 'asc'\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<h1 className=\"display-4 my-3\">Launches</h1>\r\n\t\t\t<MissionKey />\r\n\t\t\t<button className=\"btn btn-secondary mb-4\" onClick={updateItemsOrder}>\r\n\t\t\t\t<strong>Order by date: </strong>\r\n\t\t\t\t{launchItemsOrder === 'asc' ? 'Ascending' : 'Descending'}\r\n\t\t\t</button>\r\n\t\t\t<Fragment>\r\n\t\t\t\t{launchItems.map(launch => (\r\n\t\t\t\t\t<LaunchItem key={launch.flight_number} launch={launch} />\r\n\t\t\t\t))}\r\n\t\t\t</Fragment>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\nexport default Launches;\r\n","import React, { Component, Fragment } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport { Link } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_success\r\n      launch_date_local\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n      <Fragment>\r\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading...</h4>;\r\n            if (error) console.log(error);\r\n\r\n            const {\r\n              mission_name,\r\n              flight_number,\r\n              launch_year,\r\n              launch_success,\r\n              rocket: { rocket_id, rocket_name, rocket_type }\r\n            } = data.launch;\r\n\r\n            return (\r\n              <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                  <span className=\"text-dark\">Mission:</span> {mission_name}\r\n                </h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Flight Number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Launch Successful:{' '}\r\n                    <span\r\n                      className={classNames({\r\n                        'text-success': launch_success,\r\n                        'text-danger': !launch_success\r\n                      })}\r\n                    >\r\n                      {launch_success ? 'Yes' : 'No'}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <h4 className=\"my-3\">Rocket Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Rocket ID: {rocket_id}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Rocket Type: {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr />\r\n                <Link to=\"/\" className=\"btn btn-secondary\">\r\n                  Back\r\n                </Link>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launch;\r\n","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import React, { useState } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nfunction Note() {\r\n\tconst [showModal, setShowModal] = useState(true);\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={classNames(\r\n\t\t\t\t'alert',\r\n\t\t\t\t'alert-warning',\r\n\t\t\t\t'alert-dismissible',\r\n\t\t\t\t'fade',\r\n\t\t\t\t'mt-4',\r\n\t\t\t\t'fixed-bottom',\r\n\t\t\t\t{\r\n\t\t\t\t\tshow: showModal\r\n\t\t\t\t}\r\n\t\t\t)}\r\n\t\t\tstyle={{ left: window.innerWidth - 430, width: 400 }}\r\n\t\t\trole=\"alert\"\r\n\t\t>\r\n\t\t\t<strong>Note!</strong> This page isn't hosted by{' '}\r\n\t\t\t<a href=\"https://traversymedia.com\" target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\tTraversy Media\r\n\t\t\t</a>{' '}\r\n\t\t\tanymore, it is a modified version of Brad's React GraphQL{' '}\r\n\t\t\t<a href=\"https://www.youtube.com/watch?v=SEMTj8w04Z8\" target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\ttutorial\r\n\t\t\t</a>\r\n\t\t\t. If you (Brad) do not like this idea, please contact me on{' '}\r\n\t\t\t<a href=\"https://twitter.com/jvliix\" target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\tTwitter\r\n\t\t\t</a>\r\n\t\t\t.\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclassName=\"close\"\r\n\t\t\t\tonClick={() => setShowModal(false)}\r\n\t\t\t\tdata-dismiss=\"alert\"\r\n\t\t\t\taria-label=\"Close\"\r\n\t\t\t>\r\n\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from 'react';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport Launches from './components/Launches';\r\nimport Launch from './components/Launch';\r\nimport './App.css';\r\nimport logo from './logo.png';\r\nimport Note from './components/Note';\r\n\r\nconst client = new ApolloClient({\r\n\turi: '/graphql'\r\n});\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ApolloProvider client={client}>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t<Note />\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={logo}\r\n\t\t\t\t\t\t\talt=\"SpaceX\"\r\n\t\t\t\t\t\t\tstyle={{ width: 300, display: 'block', margin: 'auto' }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Launches} />\r\n\t\t\t\t\t\t<Route exact path=\"/launch/:flight_number\" component={Launch} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</ApolloProvider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}